name: Deploy Azure Resources with Terraform

on:
  workflow_dispatch:
    inputs:
      REPO_NAME:
        description: 'The name of the repository to create or use'
        required: true
        default: 'example-repo'

jobs:
  create_repo_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create New Repository
        env:
          GH_TOKEN: ${{ secrets.PAT }}
          REPO_NAME: ${{ github.event.inputs.REPO_NAME }}
        run: |
          curl \
            -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"name\":\"$REPO_NAME\", \"private\":true}" \
            "https://api.github.com/user/repos"

      - name: Setup Git Config
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
      
      # Assuming you have a way to copy the Terraform code to the GitHub workspace
      # or it's already part of the repository being checked out
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Configure Azure Credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init and Apply
        run: |
          terraform init
          terraform plan
          terraform apply -auto-approve
        working-directory: ./path_to_your_terraform_files
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
